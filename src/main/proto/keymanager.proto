syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.zup.keymanager.proto";
option java_outer_classname = "KeymanagerOuterClass";
//option objc_class_prefix = "HLW";

package com.zup.keymanager.proto;

service PixKeyService {
  rpc create (PixKeyCreateRequest) returns (PixKeyCreateResponse) {}
  rpc delete (PixKeyDeleteRequest) returns (Void) {}
  rpc info (PixKeyInfoRequest) returns (PixKeyInfoResponse) {}
  rpc list (PixKeyListRequest) returns (PixKeyListResponse) {}
}

enum KeyType {
  UNKNOWN_KEY_TYPE = 0;
  DOCUMENT = 1;
  PHONE = 2;
  EMAIL = 3;
  RANDOM = 4;
}

enum AccountType {
  UNKNOWN_ACCOUNT_TYPE = 0;
  CHECKING = 1;
  SAVINGS = 2;
}

message PixKeyCreateRequest {
  string clientId = 1;
  KeyType keyType = 2;
  string keyValue = 3;
  AccountType accountType = 4;

}

message PixKeyCreateResponse {
  string clientId = 1;
  string pixId = 2;
}

message PixKeyDeleteRequest {
  string clientId = 1;
  string pixId = 2;
}

message Void {}

message PixKeyInfoRequest {
  oneof request {
    string keyValue = 1;
    PixKeyInfoPair infoPair = 2;
  }

  message PixKeyInfoPair {
    string clientId = 1;
    string pixId = 2;
  }
}

message PixKeyInfoResponse {
  string pixId = 1;
  string clientId = 2;
  string keyValue = 3;
  KeyType keyType = 4;
  OwnerDetails owner = 6;
  AccountDetails account = 7;
  string createdAt = 8;
}

message OwnerDetails {
  string name = 1;
  string document = 2;
}

message AccountDetails {
  string name = 1;
  string branch = 2;
  string number = 3;
  AccountType accountType = 4;
}

message PixKeyListRequest {
  string clientId = 1;
}

message PixKeyListResponse {
  repeated PixKeyInfoResponse pixKeys = 1;
}

//For client usage only, unfortunately
message PixKeyResult {
  string status = 1;
  oneof result {
    Success success = 2;
    Failure failure = 3;
  }

  message Success {
    string message = 1;
    oneof response {
      PixKeyCreateResponse createResponse = 2;
      PixKeyInfoResponse infoResponse = 3;
      PixKeyListResponse listResponse = 4;
    }
  }

  message Failure {
    string message = 1;
    repeated FieldError errors = 2;

    message FieldError {
      string field = 1;
      string message = 2;
    }
  }
}